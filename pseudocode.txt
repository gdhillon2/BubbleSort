Gurvir Dhillon
Bubble Sorter

string_check.s
Function that checks input string and makes sure there is no punctuation in it
Source: Gurvir Dhillon

Input
R0 = address of input string
Output
If message contains punctuation or spaces, function will output error message. If not, there will be no output

# Iterate through string and check to make sure the ascii value of each character is within the bounds of letters/numbers

int i = 0;

while(i <= strlength(inputString))
{
	if (i == 20 )
	{
		print character limit error message;
		exit program;
	}	
	
	if( inputString[i] == 32 )
	{
		print punctuation/space error message;
		exit program;
	
	if( inputString[i] < 48 )
	{
		print punctuation/space error message;
		exit program;
	}

	else if( inputString[i] >= 58 && inputString[i] <= 64 )
	{
		print punctuation/space error message;
		exit program;
	}

	else if( inputString[i] >= 91 && inputString[i] <= 96 )
	{
		print punctuation/space error message;
		exit program;
	}
	else if( inputString[i] > 122 )
	{
		print punctuation/space error message;
		exit program;
	}
	
	i++;
}

exit function to main program;

bubble_sort.s
Source: https://www.programiz.com/dsa/bubble-sort

Input
R0 = inputString
Output
R0 = sortedString

// perform the bubble sort
String bubbleSort(String array[], int size) {

  // loop to access each array element
  for (int step = 0; step < size - 1; ++step) {
      
    // loop to compare array elements
    for (int i = 0; i < size - 1; ++i) {
      
      // compare two adjacent elements
      // change > to < to sort in descending order
      if (array[i] > array[i + 1]) {
        
        // swapping occurs if elements
        // are not in the intended order
        int temp = array[i];
        array[i] = array[i + 1];
        array[i + 1] = temp;
      }
    }
  }

  return array[];
}

main.s
Main function of program

# Prompt user for a string containing letters and numbers
printf("Please enter a string to sort: ");

# Get input string from user
scanf("%s", inputString);

# Check to make sure inputString is more than 1 character and if not, re-prompt user for more characters
if(strlength(inputString) < 1)
{
	printf("Please enter two or more characters.\n");
	printf("Please enter a string: ");
	scanf("%s", inputString);
}

# Loop above if statement until inputString > 1

# Call string_check.s to check and make sure there is nothing other than letters and numbers in the string
string_check(inputString);

# If string_check returns a 0, print error message and exit program
if( r1 = 0 )
{
	printf("Punctuation must be removed before inputting string.\n");
	exit program;
}

# If string_check returns a 1, call bubble_sort.s and sort the string
if (r1 = 1 )
{
	sortedString = bubble_sort(inputString);
}

# print sortedString and save it to an output.txt file
printf("%s", sortedString);
write sortedString to output.txt file;

close program;





